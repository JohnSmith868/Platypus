/*
 * config.json
 * 
 */
{
	"global": { // Settings for the entire game (Entities and component settings are generally found in their respective files.)
		"initialScene": "scene-1", //"scene-menu",
		"fps": 60,
		"rootElement": "root",
		"aspectRatio": 1.333
	},
	"builds": [                                  // Builds and their respective settings
		{
			"id": "game",                        // This is the id of the build and is matched to a folder name in the "builds/" folder.
		    "namespace": "PBS.KIDS.platformer",  // Optional namespace for the platformer - defaults to "PBS.KIDS.platformer"
			"cssCompression": true,
			"jsCompression": true,
			"manifest": true,                    // Determines whether this build uses Application Cache.
			"pngCompression": 256,               // Whether to compress PNGs: 0 = No, # > 0 compresses to # of colors per image.
			"paths": {
				//"default": "",                                  // If a path is specified here, all files use this absolute path; otherwise files default to relative path names.
				//"assets":  "http://gopherwoodstudios.com/pbs/"  // The list of assets can have an alternative absolute path (for example, when using a CDN). If not defined, assets use the default path above.
			}
		},{
			"id": "debug",          // This is the id of the build and is matched to a folder name in the "builds/" folder.
			"cssCompression": false,
			"jsCompression": false,
			"manifest": false,      // Determines whether this build uses Application Cache.
			"pngCompression": 256   // Whether to compress PNGs: 0 = No, # > 0 compresses to # of colors per image.
		}
	],
	"source": { 
		"assets": [ // Assets such as images and audio
            {
                "id": "powerup",
                "src": {
                    "ogg": "../audio/powerup.ogg",
                    "mp3": "../audio/powerup.mp3",
                    "m4a": "../audio/powerup.m4a",
                    "m4aCombined": {
                        "assetId": "combined", 
                        "src": "../audio/combined.m4a",
                        "data": {"offset": 5000, "length": 370}
                    }
                }
            },
            {"id": "walk",           "src": {"ogg": "../audio/walk.ogg",     "mp3": "../audio/walk.mp3",     "m4a": "../audio/walk.m4a",    "m4aCombined": {"assetId": "combined", "src": "../audio/combined.m4a", "data": {"offset": 3200, "length": 330}}}},
            {"id": "jump",           "src": {"ogg": "../audio/jump.ogg",     "mp3": "../audio/jump.mp3",     "m4a": "../audio/jump.m4a",    "m4aCombined": {"assetId": "combined", "src": "../audio/combined.m4a", "data": {"offset": 1500, "length": 250}}}},
			{"id": "buttons",        "src": "../images/buttons.png"},
			{"id": "mookie-walk",    "src": "../images/mookie.png"},
			{"id": "tilemap",        "src": "../images/tile-map.png"},
			{"id": "test",           "src": "../images/test.png"},
			{"id": "test-animation", "src": "../images/test-animation.png"},
            {"id": "tiles",          "src": "../images/tiles.png"},
            {"id": "objects",        "src": "../images/objects.png"}
		],
		"classes": [
			{"id": "Game",            "src": "../js/game.js"},
			{"id": "Entity",          "src": "../js/entity.js"},
			{"id": "Layer",           "src": "../js/layer.js"},
			{"id": "Scene",           "src": "../js/scene.js"},
			{"id": "Collision-Shape", "src": "../js/collision-shape.js"},
			{"id": "AABB", 			  "src": "../js/aabb.js"}
		],
		"components": [ // JavaScript files defining component modules
			{"id": "layer-controller",   "src": "../js/layer/layer-controller.js"},
			{"id": "tiled-loader",       "src": "../js/layer/tiled-loader.js"},
			{"id": "lc-render",          "src": "../js/layer/lc-render.js"},
			{"id": "lc-logic",           "src": "../js/layer/lc-logic.js"},
			{"id": "lc-camera",          "src": "../js/layer/lc-camera.js"},
			{"id": "lc-basic-collision", "src": "../js/layer/lc-basic-collision.js"},
            {"id": "audio",              "src": "../js/entity/audio.js"},
            {"id": "broadcast-events",   "src": "../js/entity/broadcast-events.js"},
            {"id": "enable-ios-audio",   "src": "../js/entity/enable-ios-audio.js"},
            {"id": "entity-container",   "src": "../js/entity/entity-container.js"},
            {"id": "entity-controller",  "src": "../js/entity/entity-controller.js"},
			{"id": "render-debug",       "src": "../js/entity/render-debug.js"},
			{"id": "render-tiles",       "src": "../js/entity/render-tiles.js"},
			{"id": "render-animation",   "src": "../js/entity/render-animation.js"},
            {"id": "logic-button",       "src": "../js/entity/logic-button.js"},
            {"id": "logic-directional-movement", "src": "../js/entity/logic-directional-movement.js"},
            {"id": "logic-hero", 		 "src": "../js/entity/logic-hero.js"},
			{"id": "collision-hero",     "src": "../js/entity/collision-hero.js"},
			{"id": "collision-tiles",    "src": "../js/entity/collision-tiles.js"}
		],
		"entities": [ // JSON files describing entities
			{"id": "tile-layer",      "src": "entities/tile-layer.json"}, // If "src" key is included, this will be replaced by the JSON structure in the linked file.
			{"id": "render-layer",    "src": "entities/render-layer.json"},
			{"id": "collision-layer", "src": "entities/collision-layer.json"},
            {"id": "button-left",     "src": "entities/button-left.json"},
            {"id": "button-right",    "src": "entities/button-right.json"},
            {"id": "button-mute",     "src": "entities/button-mute.json"},
			{"id": "hero",            "src": "entities/hero.json"},
            {"id": "block",           "src": "entities/block.json"},
            {"id": "dirt",            "src": "entities/dirt.json"}
		],
		"includes": [
			{"id": "EaselJS",   "src": "http://code.createjs.com/easeljs-0.5.0.min.js"},
			{"id": "TweenJS",   "src": "http://code.createjs.com/tweenjs-0.3.0.min.js"},
			{"id": "SoundJS",   "src": "http://code.createjs.com/soundjs-0.3.0.min.js"},
			{"id": "PreloadJS", "src": "http://code.createjs.com/preloadjs-0.2.0.min.js"},
			{"id": "Browser",   "src": "../js/browser.js"},
            {"id": "iOSAudio",  "src": "../js/HTMLiOSAudioPlugin.js"},
            {"id": "SoundJSm4a","src": "../js/SoundJSm4aOverride.js"},
            {"id": "Main",      "src": "../js/main.js"},
            {"id": "MainCSS",   "src": "../css/main.css"},
            {"id": "GameCSS",   "src": "../css/game.css"}
		],
		"scenes": [ // JSON files describing scenes
			{"id": "scene-menu", "src": "scenes/menu.json"}, // If "src" key is included, this will be replaced by the JSON structure in the linked file.
            {"id": "scene-1",    "src": "scenes/scene-1.json"},
            {"id": "scene-2",    "src": "scenes/scene-2.json"}
		],
		"levels": [ // JSON files describing levels
            {"id": "level-1", "src": "levels/level-1.json"}, // If "src" key is included, this will be replaced by the JSON structure in the linked file.
            {"id": "level-2", "src": "levels/level-2.json"}
		]
	},
	"client-supports": [ // "client-supports" is an array of different file sources used where a different file type or size may be required depending on properties of the client.
        {                //    Each contained object lists mutually exclusive properties, so that a single aspect is comprised of an item from each object list. This example includes a single object in the list, but additional objects can be appended for different aspects
            "ogg": ["firefox", "opera", "chrome"],         // Array lists user agent checks that should load this resource type
            "m4a": [],
            "m4aCombined": ["android", "silk", "ipod", "ipad", "iphone"],  // Order determines first valid version, so Safari on iPad will use "m4aCombined" rather than "mp3" below
            "mp3": ["msie", "safari"]
        }
	]
}